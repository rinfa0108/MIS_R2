<?php

class Application_Model_AccountingexpensesHeadoffice
{
	private $ACCOUNTINGEXPENSES_HEADOFFICE_ID;
	private $ACCOUNTINGEXPENSES_HEADOFFICE_BNAME;
	private $ACCOUNTINGEXPENSES_HEADOFFICE_PAYMENTFORM;
	private $ACCOUNTINGEXPENSES_HEADOFFICE_APPLICANTNAME;
	private $ACCOUNTINGEXPENSES_HEADOFFICE_ARRIVALDATE;
	private $ACCOUNTINGEXPENSES_HEADOFFICE_ARRIVALFROM_ADDRESS;
	private $ACCOUNTINGEXPENSES_HEADOFFICE_TRAVELMODE;
	private $ACCOUNTINGEXPENSES_HEADOFFICE_PASSPORT;
	private $ACCOUNTINGEXPENSES_HEADOFFICE_MEDICALEXP;
	private $ACCOUNTINGEXPENSES_HEADOFFICE_TESDAEXP;
	private $ACCOUNTINGEXPENSES_HEADOFFICE_TRAININGEXP;
	private $ACCOUNTINGEXPENSES_HEADOFFICE_VISAEXP;
	private $ACCOUNTINGEXPENSES_HEADOFFICE_TICKETEXP;
	private $ACCOUNTINGEXPENSES_HEADOFFICE_OTHERSEXP;
	private $ACCOUNTINGEXPENSES_HEADOFFICE_OTHERSNOTE;
	private $ACCOUNTINGEXPENSES_HEADOFFICE_TOTALEXP;
	PRIVATE $ACCOUNTINGEXPENSES_HEADOFFICE_DATEDEPARTURE;
	
	//upon construction, map the values
	//from the $sysmodules_row if available
	public function __construct($sysmodules_row = null)
	{
		if( !is_null($sysmodules_row) && $sysmodules_row instanceof Zend_Db_Table_Row ) {
			$this->ACCOUNTINGEXPENSES_HEADOFFICE_ID = $sysmodules_row->ACCOUNTINGEXPENSES_HEADOFFICE_ID;
			$this->ACCOUNTINGEXPENSES_HEADOFFICE_BNAME = $sysmodules_row->ACCOUNTINGEXPENSES_HEADOFFICE_BNAME;
			$this->ACCOUNTINGEXPENSES_HEADOFFICE_PAYMENTFORM = $sysmodules_row->ACCOUNTINGEXPENSES_HEADOFFICE_PAYMENTFORM;
			$this->ACCOUNTINGEXPENSES_HEADOFFICE_APPLICANTNAME = $sysmodules_row->ACCOUNTINGEXPENSES_HEADOFFICE_APPLICANTNAME;
			$this->ACCOUNTINGEXPENSES_HEADOFFICE_ARRIVALDATE = $sysmodules_row->ACCOUNTINGEXPENSES_HEADOFFICE_ARRIVALDATE;
			$this->ACCOUNTINGEXPENSES_HEADOFFICE_ARRIVALFROM_ADDRESS = $sysmodules_row->ACCOUNTINGEXPENSES_HEADOFFICE_ARRIVALFROM_ADDRESS;
			$this->ACCOUNTINGEXPENSES_HEADOFFICE_TRAVELMODE = $sysmodules_row->ACCOUNTINGEXPENSES_HEADOFFICE_TRAVELMODE;
			$this->ACCOUNTINGEXPENSES_HEADOFFICE_PASSPORT = $sysmodules_row->ACCOUNTINGEXPENSES_HEADOFFICE_PASSPORT;
			$this->ACCOUNTINGEXPENSES_HEADOFFICE_MEDICALEXP = $sysmodules_row->ACCOUNTINGEXPENSES_HEADOFFICE_MEDICALEXP; //ACCOUNTINGEXPENSES_BRANCH_TOTALEXP
			$this->ACCOUNTINGEXPENSES_HEADOFFICE_TESDAEXP = $sysmodules_row->ACCOUNTINGEXPENSES_HEADOFFICE_TESDAEXP;
			$this->ACCOUNTINGEXPENSES_HEADOFFICE_TRAININGEXP = $sysmodules_row->ACCOUNTINGEXPENSES_HEADOFFICE_TRAININGEXP;
			$this->ACCOUNTINGEXPENSES_HEADOFFICE_VISAEXP = $sysmodules_row->ACCOUNTINGEXPENSES_HEADOFFICE_VISAEXP;
			$this->ACCOUNTINGEXPENSES_HEADOFFICE_TICKETEXP = $sysmodules_row->ACCOUNTINGEXPENSES_HEADOFFICE_TICKETEXP;
			$this->ACCOUNTINGEXPENSES_HEADOFFICE_OTHERSEXP = $sysmodules_row->ACCOUNTINGEXPENSES_HEADOFFICE_OTHERSEXP;
			$this->ACCOUNTINGEXPENSES_HEADOFFICE_OTHERSNOTE = $sysmodules_row->ACCOUNTINGEXPENSES_HEADOFFICE_OTHERSNOTE;
			$this->ACCOUNTINGEXPENSES_HEADOFFICE_TOTALEXP = $sysmodules_row->ACCOUNTINGEXPENSES_HEADOFFICE_TOTALEXP; //ACCOUNTINGEXPENSES_HEADOFFICE_DATEDEPARTURE
			$this->ACCOUNTINGEXPENSES_HEADOFFICE_DATEDEPARTURE = $sysmodules_row->ACCOUNTINGEXPENSES_HEADOFFICE_DATEDEPARTURE;
		}
	}
	
	//magic function __set to set the
	//attributes of the User model
	public function __set($name, $value)
	{
		switch($name) {
			case 'ACCOUNTINGEXPENSES_HEADOFFICE_ID':
				//if the id isn't null, you shouldn't update it!
				if( !is_null($this->ACCOUNTINGEXPENSES_HEADOFFICE_ID) ) {
					throw new Exception('Cannot update ACCOUNTINGEXPENSES_HEADOFFICE_ID!');
				}
				break;
		}
			
		//set the attribute with the value
		$this->$name = $value;
	}
	
	public function __get($name)
	{
		return $this->$name;
	}
	
	public function __getProperties()
	{
		return get_object_vars($this);
	}

}

